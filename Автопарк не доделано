using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace ConsoleApp114
{
    internal class Program
    {
        public class Avto{
            public Array[] Bus { get; set; }
            public Array[] GruzAvto { get; set; }
            public DateTime TOBus {get; set;}
            public DateTime TOGruz {get; set;}
            
            public static int Print(int n, List <avtoList>,List <avtoList2>)
            {
                int i = 0;
                for (i = 0; i < n; i++){
                    Console.WriteLine(" __________________________________________________\n");
                    Console.WriteLine($" | {avtoList[i]} | {avtoList2[i]} |\n");
                }
                return 0;
            }
            
         }
         public class Emploee{
            public string Name { get; set; }
            public string LastP {get;set;} 
             public DateTime DateSt { get; set; }
             public DateTime DateFin{get;set;} 
             public string TypeWork {get;set;}
         }
         public class Kings:Emploee{
             public string Order{get; set;}
         }
         public class Helper:Emploee{
             public int Work(int n){
                 for (int i=0;i<n;i++){
                     Write($"{helpList[i]}, ");
                 }
             }
         }
         public class Driver:Emploee{
            public int Stazh(DateTime DateSt, DateTime DateFin,int num){
             DateTime d1 = DateSt.Date, d2=DateTime.Now.Date,d3=DateFin.Date;
             int Allstazh = (int)Math.Abs((d2-d1).TotalDays);
             int Xstazh = (int)Math.Abs((d3-d1).TotalDays);
             if (num==1) return Allstazh;
             if (num==2) return Xstazh; else Break();
            }
         }  
             
         public static int Break(){
                throw new IndexOutOfRangeException();
            }
        static void Main()
        {
            int n = Convert.ToInt32(Console.ReadLine());
            StreamReader bus = new StreamReader("bus.txt");
            StreamReader gruz = new StreamReader("gruz.txt");
            StreamReader driv = new StreamReader("driver.txt");
            StreamReader kings = new StreamReader("KingOrders.txt");
            StreamReader helper = new StreamReader("helper.txt");
            string[] Bus = new string[n];
            string[] GruzAvto = new string[n];
            string[] Orders = new string[n];
            string[] Work = new string[n];
            DateTime[] TOB = new DateTime[n];
            DateTime[] TOG = new DateTime[n];
            
            var avtoList = new List<Avto>();
            for (int i=0;i<n;i++){
                string st=bus.ReadLine();
                string[] s=st.split();
                Bus[i]=s[0];
                TOB[i]=s[1];
                st=null;
                avtoList[i].Bus = Bus[i];
                avtoList[i].TOBus = TOB[i];
            }
            var avtoList2 = new List<Avto>();
            for (int i=0;i<n;i++){
                string st=gruz.ReadLine();
                string[] s=st.split();
                GruzAvto[i]=s[0];
                TOG[i]=s[1];
                st=null;
                avtoList2[i].GruzAvto = GruzAvto[i];
                avtoList2[i].TOGruz = TOG[i];
            }
            var drivList = new List<Emploee>();
            for (int i=0;i<n;i++){
                string st=driver.ReadLine();
                string[] s=st.split();
                st=null;
                Name[i]=s[0];
                LastP[i]=s[1];
                DateSt[i]=s[2];
                DateFin[i]=s[3];
                drivList[i].Name = Name[i];
                drivList[i].LastP = LastP[i];
                drivList[i].DateSt = DateSt[i];
                drivList[i].DateFin = DateFin[i];
            }
            var kingList = new List<Kings>();
            for (int i=0;i<n;i++){
                string s=null;
                s=kings.ReadLine();
                Orders[i]=s;
                s=null;
                kingList[i].Order = Orders[i];
            }
            var helpList = new List<Emploee>();
            for (int i=0;i<n;i++){
                string s=null;
                s=helper.ReadLine();
                Work[i]=s;
                s=null;
                helpList[i].TypeWork = Work[i];
            }
            Console.WriteLine("Меню");
            Console.WriteLine("1. База авто");
            Console.WriteLine("2. Поиск по водителю");
            Console.WriteLine("3. Данные о ТО");
            Console.WriteLine("4. Работники");
            Console.WriteLine("5. Приказы");
            Console.WriteLine("6. Выход");
            int a=Convert.ToInt32(Console.ReadLine());
            if (a==1){
                Print(n,avtoList,avtoList2);
            }
            if (a==2){
                Work(n);
            }
            if (a==3){
                Console.WriteLine("sfg");
            }
            if (a==4){
                Console.WriteLine("sjt");
            }
            if (a==5){
                Console.WriteLine("zgj");
            }
            if (a==6)Break(); else Break();
            Console.ReadLine();
        }
    }
}
Файлы: bus
q815uf 1915.03.12
i009hf 2023.01.01
h611ma 2011.09.01
gruz
e658uh 1999.07.18
r735jd 2005.05.05
i837je 1814.07.17
driver
ДядяПетя Гараж 1976.12.31 2022.12.30
ТетяГааааля Чердак 1799.11.06 1976.12.31
ЕгоВысочествоАлександр ШоферПрезидента 1999.01.01 2023.01.01
KingOrders
Приказ №387568 об увеличении заработной платы в 0.5
Приказ №872360 о расширении территорий, пригодных для маршрута 
Приказ №402584 о покупке биотуалета для водителей маршрутных транспортных средств
helper
уборщица
боевоеОружее
слесарь
